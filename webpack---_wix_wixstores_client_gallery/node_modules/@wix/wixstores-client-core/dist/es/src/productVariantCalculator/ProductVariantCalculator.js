import {
    __read,
    __spreadArray,
    __values
} from "tslib";
import {
    ProductInventoryStatus
} from '../types/product';
import {
    getProductOptionsSelectionIdsWithoutModifiers
} from '../productOptions/productUtils';
import {
    calcSelectionsAvailability as calcSelectionsAvailabilityLegacy
} from './SelectionsAvailabilityCalculator.legacy';
import {
    calcSelectionsAvailability as calcSelectionsAvailabilityOptimized,
    composeCachedMethods,
} from './SelectionsAvailabilityCalculator';
var ProductVariantCalculator = /** @class */ (function() {
    function ProductVariantCalculator(product, _a) {
        var _b = _a === void 0 ? {
                isOptimized: false
            } : _a,
            isOptimized = _b.isOptimized;
        this.product = product;
        this.variantSelectionIds = [];
        this.isOptimized = isOptimized;
        if (isOptimized) {
            this.cachedMethods = composeCachedMethods(this.product);
        }
    }
    ProductVariantCalculator.prototype.setVariantSelectionIds = function(variantSelectionIds) {
        this.variantSelectionIds = variantSelectionIds;
    };
    ProductVariantCalculator.prototype.getVariantSelectionIds = function() {
        var _this = this;
        var optionsIds = this.product.options.map(function(o) {
            return o.id;
        });
        var result = Array(optionsIds.length).fill(null);
        this.variantSelectionIds.forEach(function(selectionId) {
            var selectionsOptionId = getOptionBySelectionId({
                selectionId: selectionId,
                product: _this.product,
            }).id;
            var selectionsOptionIndex = optionsIds.indexOf(selectionsOptionId);
            result[selectionsOptionIndex] = selectionId;
        });
        return result.filter(function(id) {
            return id !== null;
        });
    };
    ProductVariantCalculator.prototype.updateProduct = function(product) {
        this.product = product;
    };
    ProductVariantCalculator.prototype.getSelectionsAvailability = function(_a) {
        var _b = _a === void 0 ? {} : _a,
            _c = _b.isRemoveModifiersSelectionIdsFromUserSelections,
            isRemoveModifiersSelectionIdsFromUserSelections = _c === void 0 ? false : _c;
        return calcSelectionsAvailability({
            product: this.product,
            variantSelectionIds: this.variantSelectionIds,
            isRemoveModifiersSelectionIdsFromUserSelections: isRemoveModifiersSelectionIdsFromUserSelections,
            cachedMethods: this.cachedMethods,
            isOptimized: this.isOptimized,
        });
    };
    ProductVariantCalculator.prototype.getMediaItems = function() {
        return getProductsMediaItems({
            product: this.product,
            variantSelectionIds: this.variantSelectionIds,
        });
    };
    ProductVariantCalculator.prototype.getPriceInfo = function() {
        return getProductsPriceInfo({
            product: this.product,
            variantSelectionIds: this.variantSelectionIds,
        });
    };
    ProductVariantCalculator.prototype.canAddToCart = function() {
        return canAddToCart({
            product: this.product,
            variantSelectionIds: this.variantSelectionIds,
        });
    };
    return ProductVariantCalculator;
}());
export {
    ProductVariantCalculator
};
export function calcSelectionsAvailability(params) {
    var isOptimized = params.isOptimized;
    if (isOptimized) {
        return calcSelectionsAvailabilityOptimized(params);
    } else {
        return calcSelectionsAvailabilityLegacy(params);
    }
}
export function getProductsMediaItems(params) {
    var variantSelectionIds = params.variantSelectionIds,
        product = params.product;
    if (!variantSelectionIds.length) {
        return product.media;
    }
    var mediaItems = variantSelectionIds.reduce(function(resultMediaItems, selectionId) {
        var _a, _b;
        var selectionsMediaItems = (_b = (_a = getSelectionById({
            product: product,
            selectionId: selectionId,
        })) === null || _a === void 0 ? void 0 : _a.linkedMediaItems) !== null && _b !== void 0 ? _b : [];
        return __spreadArray(__spreadArray([], __read(resultMediaItems), false), __read(selectionsMediaItems), false);
    }, []);
    if (!mediaItems.length) {
        return product.media;
    }
    return mediaItems;
}
export function getProductsPriceInfo(params) {
    var _a, _b, _c, _d, _e;
    var product = params.product,
        variantSelectionIds = params.variantSelectionIds;
    var productItem = getProductVariantBySelectionIds({
        product: product,
        variantSelectionIds: variantSelectionIds,
    });
    return {
        price: (_a = productItem === null || productItem === void 0 ? void 0 : productItem.price) !== null && _a !== void 0 ? _a : product.price,
        formattedPrice: (_b = productItem === null || productItem === void 0 ? void 0 : productItem.formattedPrice) !== null && _b !== void 0 ? _b : product.formattedPrice,
        comparePrice: (_c = productItem === null || productItem === void 0 ? void 0 : productItem.comparePrice) !== null && _c !== void 0 ? _c : product.comparePrice,
        formattedComparePrice: (_d = productItem === null || productItem === void 0 ? void 0 : productItem.formattedComparePrice) !== null && _d !== void 0 ? _d : product.formattedComparePrice,
        formattedPricePerUnit: (_e = productItem === null || productItem === void 0 ? void 0 : productItem.formattedPricePerUnit) !== null && _e !== void 0 ? _e : product.formattedPricePerUnit,
    };
}
export function isProductVariantItemIsInStock(_a) {
    var _b, _c;
    var product = _a.product,
        productItem = _a.productItem;
    if (!productItem) {
        return !product.isTrackingInventory || ((_b = product.inventory) === null || _b === void 0 ? void 0 : _b.availableForPreOrder);
    }
    var isTrackingInventory = (_c = productItem === null || productItem === void 0 ? void 0 : productItem.isTrackingInventory) !== null && _c !== void 0 ? _c : product.isTrackingInventory;
    var isInStock = isTrackingInventory ?
        productItem.inventory.quantity > 0 :
        productItem.inventory.status === ProductInventoryStatus.IN_STOCK;
    return isInStock || !!productItem.availableForPreOrder;
}

function isProductIsInStockByItsOwn(_a) {
    var _b;
    var product = _a.product;
    var isPreOrderProduct = (_b = product.inventory) === null || _b === void 0 ? void 0 : _b.availableForPreOrder;
    if (!product.isManageProductItems && (product.isInStock || isPreOrderProduct)) {
        return true;
    }
    if (product.isManageProductItems && product.productItems.length === 0) {
        return true;
    }
    return false;
}

function getOptionBySelectionId(_a) {
    var product = _a.product,
        selectionId = _a.selectionId;
    return product.options.find(function(option) {
        return option.selections.some(function(selection) {
            return selection.id === selectionId;
        });
    });
}

function getSelectionById(_a) {
    var e_1, _b;
    var product = _a.product,
        selectionId = _a.selectionId;
    try {
        for (var _c = __values(product.options), _d = _c.next(); !_d.done; _d = _c.next()) {
            var option = _d.value;
            var selection = option.selections.find(function(s) {
                return s.id === selectionId;
            });
            if (selection) {
                return selection;
            }
        }
    } catch (e_1_1) {
        e_1 = {
            error: e_1_1
        };
    } finally {
        try {
            if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
        } finally {
            if (e_1) throw e_1.error;
        }
    }
    return undefined;
}
export function canAddToCart(_a) {
    var _b;
    var product = _a.product,
        variantSelectionIds = _a.variantSelectionIds;
    if (variantSelectionIds.length < product.options.length || ((_b = product.customTextFields) === null || _b === void 0 ? void 0 : _b.length)) {
        return false;
    }
    var isProductInStock = isProductIsInStockByItsOwn({
        product: product
    });
    if (isProductInStock || !product.options.length) {
        return isProductInStock;
    }
    var productItem = getProductVariantBySelectionIds({
        product: product,
        variantSelectionIds: variantSelectionIds
    });
    if (!product.productItems.length || (productItem === null || productItem === void 0 ? void 0 : productItem.isVisible) === false) {
        return false;
    }
    var isVariantInStock = isProductVariantItemIsInStock({
        product: product,
        productItem: productItem
    });
    return !!(isProductInStock || isVariantInStock);
}
export function getProductVariantBySelectionIds(_a) {
    var _b;
    var product = _a.product,
        variantSelectionIds = _a.variantSelectionIds,
        _c = _a.isRemoveModifiersSelectionIdsFromUserSelections,
        isRemoveModifiersSelectionIdsFromUserSelections = _c === void 0 ? false : _c;
    if (isRemoveModifiersSelectionIdsFromUserSelections) {
        var productOptionsSelectionIdsWithoutModifiers_1 = getProductOptionsSelectionIdsWithoutModifiers(product);
        variantSelectionIds = variantSelectionIds.filter(function(id) {
            return productOptionsSelectionIdsWithoutModifiers_1.includes(id);
        });
        if (!variantSelectionIds.length) {
            return;
        }
    }
    var comparator = function(a, b) {
        return a - b;
    };
    var sortedSelectionsStr = __spreadArray([], __read(variantSelectionIds), false).sort(comparator).join('');
    return (_b = product.productItems) === null || _b === void 0 ? void 0 : _b.find(function(_a) {
        var optionsSelections = _a.optionsSelections;
        return sortedSelectionsStr === __spreadArray([], __read(optionsSelections), false).sort(comparator).join('');
    });
}
//# sourceMappingURL=ProductVariantCalculator.js.map