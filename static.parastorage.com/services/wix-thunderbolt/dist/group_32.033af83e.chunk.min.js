"use strict";
(self.webpackJsonp__wix_thunderbolt_app = self.webpackJsonp__wix_thunderbolt_app || []).push([
    [8908], {
        13396: function(e, t, n) {
            n.r(t), n.d(t, {
                PageTransitionsCompletedSymbol: function() {
                    return a.dB
                },
                PageTransitionsSymbol: function() {
                    return a.e$
                },
                editor: function() {
                    return h
                },
                editorPage: function() {
                    return v
                },
                page: function() {
                    return w
                }
            });
            var o = n(77748),
                i = n(20590),
                r = n(32166),
                a = n(86046),
                s = n(41596);
            const d = (0, o.Og)([(0, o.KT)(i.Gp, a.UU), (0, o.KT)(i.wk, a.UU), a.dB, s.s, r.RV], ((e, t, n, o, i) => {
                    const r = !!i && "startViewTransition" in i.document && e.shouldUseViewTransition;
                    return {
                        name: "pageTransitions",
                        pageDidMount(o) {
                            const i = t.get(),
                                r = i ? .mountDoneHandler;
                            r && r({
                                transitionName: e.transitionName,
                                pageId: o
                            }), (i ? .isFirstMount ? ? 1) && n.notifyPageTransitionsCompleted(o), t.update((e => ({ ...e,
                                isFirstMount: !1
                            })))
                        },
                        pageWillUnmount({
                            contextId: e
                        }) {
                            const a = t.get();
                            if (r) {
                                const e = () => {
                                        o.getScrollYHistoryState() || o.scrollToTop()
                                    },
                                    r = e => {
                                        n.notifyPageTransitionsCompleted(e), o.getScrollYHistoryState() && o.restoreScrollPosition()
                                    };
                                ! function(e, t, n, o) {
                                    let i, r;
                                    t.document.documentElement.dataset.viewTransition = "page-transition";
                                    const a = document.startViewTransition((() => e.then((e => {
                                        r = e.transitionName, i = e.pageId, t.document.documentElement.dataset.pageTransition = r
                                    }))));
                                    a.ready.then(n), a.finished.then((() => {
                                        delete t.document.documentElement.dataset.viewTransition, o(i)
                                    }))
                                }(new Promise((e => {
                                    t.update((t => ({ ...t,
                                        mountDoneHandler: e
                                    })))
                                })), i, e, r)
                            }
                            a ? .propsUpdateListenersUnsubscribers ? .[e] ? .(), t.update((t => {
                                const n = t ? .propsUpdateListenersUnsubscribers ? ? {};
                                return delete n[e], { ...t,
                                    propsUpdateListenersUnsubscribers: n
                                }
                            }))
                        }
                    }
                })),
                l = (0, o.Og)([(0, o.KT)(i.wk, a.UU)], (e => ({
                    disableNextTransition: () => e.update((e => ({ ...e,
                        nextTransitionEnabled: !1
                    })))
                }))),
                p = (0, o.Og)([(0, o.KT)(i.Gp, a.UU)], (e => {
                    let t = [];
                    return {
                        hasTransition: "none" !== e.transitionName,
                        onPageTransitionsCompleted: e => {
                            t.push(e)
                        },
                        notifyPageTransitionsCompleted: e => {
                            t.forEach((t => t(e))), t = []
                        }
                    }
                }));
            var u = n(16537),
                c = n(20636),
                g = n(87711);
            const m = (0, o.Og)([(0, o.KT)(i.Gp, a.UU), g.Ji, a.dB, s.s, (0, o.KT)(i.wk, a.UU), r.RV], ((e, t, n, o, i, r) => ({
                componentTypes: ["Page"],
                componentWillMount(a) {
                    const s = i.get(),
                        d = !s || s.nextTransitionEnabled,
                        l = !s || s.isFirstMount,
                        p = !!r && "startViewTransition" in r.document && e.shouldUseViewTransition,
                        u = a.id;
                    t.update({
                        SITE_PAGES: {
                            transitionEnabled: d,
                            ...p ? {} : {
                                onTransitionStarting: () => {
                                    o.getScrollYHistoryState() || o.scrollToTop()
                                },
                                onTransitionComplete: () => {
                                    n.notifyPageTransitionsCompleted(u), o.getScrollYHistoryState() && o.restoreScrollPosition()
                                }
                            }
                        }
                    }), i.update((() => ({ ...s,
                        isFirstMount: l,
                        nextTransitionEnabled: !0
                    })))
                }
            })));
            var T = n(39218),
                U = n(62155),
                y = n.n(U);
            const b = ["video.videoInfo.videoId", "image.uri", "image.link.href", "image.displayMode", "backgroundImage.uri", "backgroundImage.link.href", "backgroundImage.displayMode"],
                f = ["type", "alignType", "fittingType", "scrollType", "colorOverlay", "colorOverlayOpacity", "color", "opacity"],
                P = (e, t, n, o) => o.every((n => (e && e[n]) === (t && t[n]))) && n.every((i => !e && !t || P(e && e[i], t && t[i], n, o))),
                k = (0, o.Og)([(0, o.KT)(i.Gp, a.UU), g.Ji, (0, o.KT)(i.wk, a.UU), T.Is, T.DR], ((e, t, n, o, i) => {
                    const r = `pageBackground_${o}`,
                        a = t.subscribeToChanges((i => {
                            if (r in i) {
                                const d = i[r] ? .fillLayers,
                                    l = n.get().pageBackgroundProp,
                                    p = e.pageBackground,
                                    u = n.get().pageBackground,
                                    c = n.get() ? .nextTransitionEnabled ? ? !0,
                                    g = !((e, t) => {
                                        if (!t || !e) return !1;
                                        const n = t.mediaRef,
                                            o = n && n.type,
                                            i = e.mediaRef,
                                            r = i && i.type,
                                            a = !n && !i,
                                            s = a || o === r;
                                        let d = [...f];
                                        if ("WixVideo" === o && s) {
                                            const e = d.indexOf("color");
                                            d.splice(e, 1)
                                        } else a && (d = ["color"]);
                                        return s && P(t, e, ["mediaRef", "imageOverlay"], d)
                                    })(p, u),
                                    m = (a = d, !((s = l) && a && b.every((e => y().get(s, e) === y().get(a, e)))) || g);
                                n.update((e => ({ ...e,
                                    pageBackgroundProp: d,
                                    pageBackground: p
                                })));
                                const T = c && m;
                                t.update({
                                    BACKGROUND_GROUP: {
                                        key: `BACKGROUND_GROUP_${e.viewMode}`,
                                        transitionEnabled: T,
                                        className: `backgroundGroup_${o}`
                                    }
                                })
                            }
                            var a, s
                        }));
                    return n.update((e => {
                        const t = e ? .propsUpdateListenersUnsubscribers ? ? {};
                        return t[i] = a, { ...e || {},
                            propsUpdateListenersUnsubscribers: t
                        }
                    })), {
                        componentTypes: ["PageBackground"],
                        componentWillMount() {
                            const e = n.get(),
                                t = e ? .isFirstMount ? ? !0;
                            n.update((() => ({ ...e,
                                isFirstMount: t
                            })))
                        }
                    }
                })),
                w = e => {
                    e(a.dB).to(p), e(a.e$).to(l), e(u.$.PageDidMountHandler, u.$.PageWillUnmountHandler).to(d), e(c.ls).to(m), e(c.ls).to(k)
                },
                v = e => {
                    e(u.$.PageDidMountHandler, u.$.PageWillUnmountHandler).to(d), e(c.ls).to(m), e(c.ls).to(k)
                },
                h = e => {
                    e(a.e$).to(l), e(a.dB).to(p)
                }
        }
    }
]);
//# sourceMappingURL=https://static.parastorage.com/services/wix-thunderbolt/dist/group_32.033af83e.chunk.min.js.map