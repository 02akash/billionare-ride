import {
    httpClientErrorSrc176Evid404
} from '@wix/bi-logger-os-data/v2';
import {
    withoutDefaults
} from './util/withoutDefaults';
export function reportErrorBi(errorHandler, params) {
    var _errorResponse$config;
    const {
        errorAccessor,
        errorState,
        isOverrideError,
        isOverrideErrorStateFunction,
        isConsumerResolvedError
    } = params;
    const {
        biLogger
    } = errorHandler;
    const {
        statusCode,
        errorData,
        errorDetails,
        errorMessage,
        exceptionMessage,
        httpError,
        errorResponse
    } = errorAccessor;
    biLogger.report(withoutDefaults(httpClientErrorSrc176Evid404)({
        error_code: statusCode,
        error_json: errorData ? JSON.stringify(errorData) : undefined,
        exception_message: exceptionMessage,
        error_message: errorMessage,
        client_error_code: errorAccessor == null ? void 0 : errorAccessor.clientCode,
        error_type: errorDetails != null && errorDetails.applicationError ? 'applicationError' : errorDetails != null && errorDetails.validationError ? 'validationError' : undefined,
        request_id: httpError == null ? void 0 : httpError.requestId,
        is_override_error: String(isOverrideError),
        is_override_error_state_function: String(isOverrideErrorStateFunction),
        url: errorResponse == null || (_errorResponse$config = errorResponse.config) == null ? void 0 : _errorResponse$config.url,
        translated_message: errorState == null ? void 0 : errorState.message,
        action: errorState == null ? void 0 : errorState.action.text,
        is_consumer_resolved_error: isConsumerResolvedError
    }));
}
//# sourceMappingURL=reportErrorBi.js.map